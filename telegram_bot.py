import datetime

import telebot
from telebot import types
from pycoingecko import CoinGeckoAPI
from py_currency_converter import convert
import time
cg = CoinGeckoAPI()

bot = telebot.TeleBot('5986032038:AAHuxoPdJQSy09jRGUh7HMOkOhpZrk25hkM')#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –ø–æ –∫–ª—é—á—É BotFather

@bot.message_handler(commands=['start'])#–ë–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
def main(message):

    button = types.ReplyKeyboardMarkup(resize_keyboard=True)#–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏
    button.add(types.KeyboardButton('üöÄ –í–∑–ª–µ—Ç'), types.KeyboardButton('üìù –û –ø—Ä–æ–µ–∫—Ç–µ'), types.KeyboardButton('üíª –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'), types.KeyboardButton('üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'), types.KeyboardButton('üí≥ –ö–æ—à–µ–ª—ë–∫'), types.KeyboardButton('‚öô –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞'))



    msg = bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=button)

    bot.register_next_step_handler(msg, choice)#–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É

def choice(message):
    if message.text == 'üöÄ –í–∑–ª–µ—Ç':
        vzlet(message)
    elif message.text == 'üìù –û –ø—Ä–æ–µ–∫—Ç–µ':
        qiwiethereum(message)
    elif message.text == 'üíª –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏':
        c_course(message)
    elif message.text == 'üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã':
        c_course(message)
    elif message.text == 'üí≥ –ö–æ—à–µ–ª—ë–∫':
        c_course(message)
    elif message.text == '‚öô –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        c_course(message)
    else:
        main(message)

def c_course(message):
    price = cg.get_price(ids='bitcoin, ethereum', vs_currencies='rub')
    bot.send_message(message.chat.id, f'–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n\n'
       f'1 BTC == {price["bitcoin"]["rub"]} RUB\n'
       f'1 ETH == {price["ethereum"]["rub"]} RUB\n\n\n'
       f'–ö—É—Ä—Å –æ–±–º–µ–Ω–∞:\n\n'
       f'1 BTC == {price["bitcoin"]["rub"] * 1.03} RUB\n'
       f'1 ETH == {price["ethereum"]["rub"] * 1.03} RUB')
    main(message)

def vzlet(message):

    markup = types.InlineKeyboardMarkup(row_width=2)
    item = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data='question_1')
    item2 = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='goodbye')
    markup.add(item, item2)
    file = open('photo_1.jpeg', 'rb')

    bot.send_photo(message.chat.id, file, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∑–ª–µ—Ç–µ—Ç—å, '
                                      '–í–∞–º –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –Ω–∞ 5000 RUB', reply_markup=markup)

def deposit(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    item = types.InlineKeyboardButton('–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞', callback_data='balance_1')
    item2 = types.InlineKeyboardButton('–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data='balance_2')
    markup.add(item, item2)

    bot.send_message(message.chat.id, 'üì§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è '
                                                    '–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –±–æ—Ç–∞\n‚ñ™ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è.', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.message:
        if call.data == 'question_1':
            bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.id)
            deposit(call.message)
        elif call.data == 'goodbye':
            bot.send_message(call.message.chat.id,'–í–µ—Ä–Ω—É–ª—Å—è')
            main(call.message)

def proverka(message): #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ 5k
    try:
        global course
        course = {}
        proverka = {}
        proverka['qiwibitcoin'] = message.text
        course = float(proverka['qiwibitcoin'])

        price = cg.get_price(ids='bitcoin', vs_currencies='rub')  # –∫—É—Ä—Å

        if course >= 2000:
            msg = bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏—Ç–µ {float("{0:.8f}".format(course / (price["bitcoin"]["rub"] * 1.03)))} BTC –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫.\n'
                                              f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à BTC –∞–¥—Ä–µ—Å.')
            bot.register_next_step_handler(msg, proverka2)#–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É
        else:
            bot.send_message(message.chat.id, '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2000 —Ä—É–±–ª–µ–π')
            qiwibitcoin(message)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
        qiwibitcoin(message)

def proverka2(message): #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫
    global wallet
    wallet = {}
    wallet["proverka"] = message.text #–ó–¥–µ—Å—å –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—à –∫–æ—à–µ–ª–µ–∫
    button = types.ReplyKeyboardMarkup(resize_keyboard=True)#–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏
    button.add(types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ–ø–ª–∞—Ç—É'))

    price = cg.get_price(ids='bitcoin', vs_currencies='rub')  # –∫—É—Ä—Å
    msg = bot.send_message(message.chat.id, f'–í—ã –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç–µ {course} –Ω–∞ {float("{0:.8f}".format(course / (price["bitcoin"]["rub"] * 1.03)))} BTC.\n'
                                      f'–í–∞—à –∫–æ—à–µ–ª–µ–∫: {wallet["proverka"]}\n\n'
                                      f'–ú—ã –æ–∂–∏–¥–∞–µ–º –æ—Ç –≤–∞—Å –æ–ø–ª–∞—Ç—ã –Ω–∞ QIWI –≤ —Ä–∞–∑–º–µ—Ä–µ {course} –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º: +79510006255\n'
                                            f'–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.', reply_markup=button)

    bot.register_next_step_handler(msg, finish)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É


def finish(message):
    price = cg.get_price(ids='bitcoin', vs_currencies='rub')  # –∫—É—Ä—Å

    if message.text == '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ–ø–ª–∞—Ç—É':
        bot.send_message(message.chat.id, f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ {datetime.datetime.now()}.\n–û–±–º–µ–Ω –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç.\n'
                                          '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –æ–±–º–µ–Ω–Ω–∏–∫–∞ BitsKhalifa.')
        bot.send_message(1328178979, f'–°—É–º–º–∞ –æ–±–º–µ–Ω–∞: {course}\n'
                                       f'–°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {float("{0:.8f}".format(course / (price["bitcoin"]["rub"] * 1.03)))} BTC.\n'
                                       f'–ù–∞ –∫–æ—à–µ–ª–µ–∫: {wallet["proverka"]}\n\n'
                                       f'–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏: {datetime.datetime.now()}')

        main(message)

    else:
        pass


def qiwiethereum(message):
    button = types.ReplyKeyboardRemove()#–£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω –∞—ç–∫—Ä–∞–Ω–µ
    price = cg.get_price(ids='ethereum', vs_currencies='rub') #–∫—É—Ä—Å
    msg = bot.send_message(message.chat.id, f'1 Ethereum == {price["ethereum"]["rub"] * 1.03} RUB\n'
                                      f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2000 —Ä—É–±–ª–µ–π\n'
                                      f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∞—à–µ–≥–æ –æ–±–º–µ–Ω–∞.', reply_markup=button)

    bot.register_next_step_handler(msg, eth_proverka)#–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É

def eth_proverka(message): #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ 5k
    try:
        global course
        course = {}
        proverka = {}
        proverka['qiwiethereum'] = message.text
        course = float(proverka['qiwiethereum'])

        price = cg.get_price(ids='ethereum', vs_currencies='rub')  # –∫—É—Ä—Å

        if course >= 2000:
            msg = bot.send_message(message.chat.id, f'–í—ã –ø–æ–ª—É—á–∏—Ç–µ {float("{0:.8f}".format(course / (price["ethereum"]["rub"] * 1.03)))} ETH –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª–µ–∫.\n'
                                              f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ETH –∞–¥—Ä–µ—Å.')
            bot.register_next_step_handler(msg, eth_proverka2)#–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É
        else:
            bot.send_message(message.chat.id, '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2000 —Ä—É–±–ª–µ–π')
            qiwiethereum(message)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
        qiwiethereum(message)

def eth_proverka2(message): #–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫
    global wallet
    wallet = {}
    wallet["eth_proverka"] = message.text #–ó–¥–µ—Å—å –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—à –∫–æ—à–µ–ª–µ–∫
    button = types.ReplyKeyboardMarkup(resize_keyboard=True)#–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏
    button.add(types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ–ø–ª–∞—Ç—É'))

    price = cg.get_price(ids='ethereum', vs_currencies='rub')  # –∫—É—Ä—Å
    msg = bot.send_message(message.chat.id, f'–í—ã –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç–µ {course} –Ω–∞ {float("{0:.8f}".format(course / (price["ethereum"]["rub"] * 1.03)))} ETH.\n'
                                      f'–í–∞—à –∫–æ—à–µ–ª–µ–∫: {wallet["eth_proverka"]}\n\n'
                                      f'–ú—ã –æ–∂–∏–¥–∞–µ–º –æ—Ç –≤–∞—Å –æ–ø–ª–∞—Ç—ã –Ω–∞ QIWI –≤ —Ä–∞–∑–º–µ—Ä–µ {course} –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º: +79510006255\n\n'
                                            f'–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.', reply_markup=button)

    bot.register_next_step_handler(msg, eth_finish)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—â–µ–º—É —à–∞–≥—É


def eth_finish(message):
    price = cg.get_price(ids='ethereum', vs_currencies='rub')  # –∫—É—Ä—Å

    if message.text == '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –æ–ø–ª–∞—Ç—É':
        bot.send_message(message.chat.id, f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ {datetime.datetime.now()}.\n–û–±–º–µ–Ω –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç.\n'
                                          '–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –æ–±–º–µ–Ω–Ω–∏–∫–∞ BitsKhalifa.')
        bot.send_message(1328178979, f'–°—É–º–º–∞ –æ–±–º–µ–Ω–∞: {course}\n'
                                       f'–°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {float("{0:.8f}".format(course / (price["ethereum"]["rub"] * 1.03)))} ETH.\n'
                                       f'–ù–∞ –∫–æ—à–µ–ª–µ–∫: {wallet["eth_proverka"]}\n\n'
                                       f'–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏: {datetime.datetime.now()}')

        main(message)

    else:
        pass



bot.polling()#–ö–æ–Ω–µ—Ü –±–æ—Ç–∞